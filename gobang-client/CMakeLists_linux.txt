cmake_minimum_required(VERSION 3.5)

project(gobang-client VERSION 0.1 LANGUAGES CXX)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

set(CMAKE_CXX_COMPILER clang++)

include_directories(./robot)
include_directories(./local)
include_directories(./online)
include_directories(./base)

find_package(QT NAMES Qt6 Qt5 REQUIRED COMPONENTS Widgets)
find_package(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS Widgets)

set(openjson ./lib/openjson/openjson.cpp ./lib/openjson/openjson.h)
set(ai ./robot/ChessEngine.h ./robot/ChessEngine.cpp ./robot/PossiblePositionManager.h ./robot/PossiblePositionManager.cpp ./robot/ACSearcher.h ./robot/ACSearcher.cpp ./robot/stdafx.h ./robot/stdafx.cpp)

set(PROJECT_SOURCES
    main.cpp
    mainwindow.cpp
    mainwindow.h
    mainwindow.ui
    images.qrc

    app_win32.rc

    ./base/base.h
    ./base/chess.h ./base/chess.cpp

    ./local/home.h ./local/home.cpp ./local/home.ui
    ./local/game.h ./local/game.cpp ./local/game.ui
    ./local/settingdialog.h ./local/settingdialog.cpp ./local/settingdialog.ui
    ./local/robotthread.h ./local/robotthread.cpp

    ./online/lobby.h ./online/lobby.cpp ./online/lobby.ui
    ./online/tcpclient.h ./online/tcpclient.cpp
    ./online/recvthread.h ./online/recvthread.cpp
    ./online/onlinegame.h ./online/onlinegame.cpp ./online/onlinegame.ui
    ${openjson}
    ${ai}
)

if(${QT_VERSION_MAJOR} GREATER_EQUAL 6)
    qt_add_executable(gobang-client
        MANUAL_FINALIZATION
        ${PROJECT_SOURCES}
    )

# Define target properties for Android with Qt 6 as:
# set_property(TARGET gobang-client APPEND PROPERTY QT_ANDROID_PACKAGE_SOURCE_DIR
# ${CMAKE_CURRENT_SOURCE_DIR}/android)
# For more information, see https://doc.qt.io/qt-6/qt-add-executable.html#target-creation
else()
    if(ANDROID)
        add_library(gobang-client SHARED
            ${PROJECT_SOURCES}
        )

    # Define properties for Android with Qt 5 after find_package() calls as:
    # set(ANDROID_PACKAGE_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/android")
    else()
        add_executable(gobang-client
            ${PROJECT_SOURCES}
        )
    endif()
endif()

target_link_libraries(gobang-client PRIVATE wsock32 Qt${QT_VERSION_MAJOR}::Widgets)
# if is windows: target_link_libraries(gobang-client PRIVATE wsock32 Qt${QT_VERSION_MAJOR}::Widgets)
set_target_properties(gobang-client PROPERTIES
    MACOSX_BUNDLE_GUI_IDENTIFIER my.example.com
    MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
    MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
    MACOSX_BUNDLE TRUE
    WIN32_EXECUTABLE TRUE
)

install(TARGETS gobang-client
    BUNDLE DESTINATION .
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})

if(QT_VERSION_MAJOR EQUAL 6)
    qt_finalize_executable(gobang-client)
endif()
